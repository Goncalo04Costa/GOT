// <auto-generated />
using System;
using APIGOTinforcavado.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIGOTinforcavado.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250227162246_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shared.models.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("TicketId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TicketId1");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("Shared.models.Ticket", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoTarefa")
                        .HasColumnType("int");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Telefone")
                        .HasColumnType("int");

                    b.Property<int?>("UtilizadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Shared.models.UploadedFiles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ComentarioId")
                        .HasColumnType("int");

                    b.Property<byte[]>("FileData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeFicheiro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ComentarioId");

                    b.HasIndex("TicketId");

                    b.ToTable("UploadedFiles");
                });

            modelBuilder.Entity("Shared.models.Utilizador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("utilizadores");
                });

            modelBuilder.Entity("Shared.models.Comentario", b =>
                {
                    b.HasOne("Shared.models.Ticket", "Ticket")
                        .WithMany("Comentarios")
                        .HasForeignKey("TicketId1");

                    b.HasOne("Shared.models.Utilizador", "Utilizador")
                        .WithMany("Comentarios")
                        .HasForeignKey("UtilizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("Shared.models.Ticket", b =>
                {
                    b.HasOne("Shared.models.Utilizador", null)
                        .WithMany("Tickets")
                        .HasForeignKey("UtilizadorId");
                });

            modelBuilder.Entity("Shared.models.UploadedFiles", b =>
                {
                    b.HasOne("Shared.models.Comentario", "Comentario")
                        .WithMany()
                        .HasForeignKey("ComentarioId");

                    b.HasOne("Shared.models.Ticket", "Ticket")
                        .WithMany("Ficheiros")
                        .HasForeignKey("TicketId");

                    b.Navigation("Comentario");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Shared.models.Ticket", b =>
                {
                    b.Navigation("Ficheiros");

                    b.Navigation("Comentarios");
                });

            modelBuilder.Entity("Shared.models.Utilizador", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
