@inject HttpClient HttpClient
@using GOTinforcavado.Services
@using Microsoft.AspNetCore.Components.Forms
@inject NavigationManager NavigationManager
@using Shared.models
@inject TicketService TicketService
@inject ComentarioService ComentarioService
@using System.Security.Cryptography
@using System.Text
@using System.Globalization
@using System.Text.RegularExpressions
@using MudBlazor.Components
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web

<style>
    .AcompanhaTicket {
        height: 1270px;
        background-color: white;
    }

    .TituloAcompnha {
        padding-top: 20px;
        width: 476px;
        height: 46px;
        color: #12444A;
        opacity: 1;
        font-family: "Poppins";
        font-size: 32px;
        font-weight: 700;
        margin-left: 324px;
        white-space: nowrap;
    }

    .TextoInformativoAcompanhamento {
        width: 717px;
        height: 46px;
        letter-spacing: 0px;
        color: #414D4D;
        opacity: 1;
        margin-left: 324px;
        font-family: "Sora";
        font-size: 18px;
        padding-top: 18px;
    }

    .InputWrapper {
        position: relative;
        width: 720px;
        height: 48px;
        margin-left: 324px;
    }

    .caixaDETexto {
        width: 720px;
        height: 48px;
        background: #FFFFFF;
        border: 1px solid #D1D8D8;
        border-radius: 8px;
        opacity: 1;
    }

    .BotaoSubscrever {
        position: absolute;
        top: 4px;
        left: calc(100% - 113px + 4px);
        bottom: 4px;
        width: 113px;
        height: 40px;
        background: #1B7C87;
        border: none;
        border-radius: 8px;
        color: #fff;
        cursor: pointer;
        opacity: 1;
    }

    .cards-container {
        display: flex;
        align-items: center;
        gap: 8px;
        margin-left: 330px;
        margin-top: 28px;
    }

    .VerEstado,
    .VerDepartamento1,
    .VerDepartamento2,
    .VerHorasss {
        width: 80px;
        height: 24px;
        font-family: "Poppins";
        font-size: 13px;
        font-weight: 500;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .VerEstado {
        background-color: #5D22891A;
    }

    .VerDepartamento1,
    .VerDepartamento2,
    .VerHorasss {
        border: 1px solid #B9D6DA;
        color: #192356;
    }

    .ticket-info {
        display: flex;
        align-items: center;
        gap: 8px;
        margin-left: 330px;
        padding-top: 16px;
    }

    .ticketcode, .ticketassunto {
        letter-spacing: 0px;
        color: #0D3439;
        opacity: 1;
        font-family: "Poppins";
        font-size: 24px;
        font-weight: 500;
    }

    .ticketMensagem {
        margin-left: 330px;
        width: 628px;
        height: 35px;
        font-family: "Sora";
        font-size: 13px;
        letter-spacing: 0px;
        color: #414D4D;
        opacity: 1;
        margin-top: 8px;
        white-space: nowrap;
    }

    .ticketMensagem:last-of-type {
        width: 58px;
        height: 14px;
        font-family: "Sora";
        font-size: 11px;
        letter-spacing: 0px;
        color: #758A8A;
        opacity: 1;
        margin-top: 8px;
    }

    .ticket-detalhes {
        display: flex;
        justify-content: space-between;
        width: 720px;
        margin-left: 330px;
        margin-top: 8px;
        font-family: "Sora";
        font-size: 13px;
        color: #414D4D;
        opacity: 1;
    }

    .caixaComentarios {
        background: #E8F2F380;
        width: 720px;
        margin-left: 330px;
        padding: 16px;
    }

    .semmaisdados {
        width: 124px;
        height: 13px;
        letter-spacing: 0px;
        color: #758A8A;
        opacity: 1;
        font-family: "Sora";
        font-size: 10px;
        padding-bottom: 24px;
        margin-left: 290px;
        margin-right: 290px;
    }

    .criouticket {
        width: 688px;
        height: 32px;
        display: inline-flex;
        align-items: center;
    }

    .point {
        width: 5px;
        height: 19px;
        text-align: left;
        font-family: "Poppins";
        letter-spacing: 0px;
        color: #192356;
        opacity: 1;
        margin-left: 18px;
    }

    .username {
        margin-top: 10px;
        width: auto;
        height: 19px;
        padding-left: 6px;
        letter-spacing: 0px;
        color: #226589;
        opacity: 1;
        font-size: 10px;
        font-family: "Poppins";
    }

    .textocriouticket {
        margin-top: 10px;
        width: auto;
        height: 19px;
        padding-left: 0px;
        letter-spacing: 0px;
        color: #192356;
        opacity: 1;
        font-size: 10px;
        font-family: "Poppins";
        margin-left: 4px;
        white-space: nowrap;
    }

    .horariocriacaoticket {
        margin-top: 6px;
        width: auto;
        color: #19235699;
        font-size: 10px;
        font-family: "Sora";
        margin-left: 430px;
    }

    .comentario-form {
        margin-top: 24px;
        padding-top: 16px;
        border-top: 1px solid #D1D8D8;
    }

    .comentario-form h4 {
        margin-left: 10px;
        color: #12444A;
    }

    .comentario-form textarea {
        width: 100%;
        min-height: 80px;
        border-radius: 8px;
        border: 1px solid #D1D8D8;
        padding: 8px;
        font-family: "Sora";
    }

    .comentario-form .switch-container {
        display: flex;
        align-items: center;
        margin-top: 8px;
    }

    .comentario-form .switch-container span {
        margin-left: 8px;
        font-family: "Sora";
    }

    .comentario-form button {
        margin-top: 12px;
        padding: 8px 16px;
        background-color: #1B7C87;
        color: #fff;
        border: none;
        border-radius: 8px;
        cursor: pointer;
    }
</style>

<header class="AcompanhaTicket">
    <p class="TituloAcompnha">
        Acompanhamento de tickets
    </p>
    <p class="TextoInformativoAcompanhamento">
        O número do seu ticket permite-nos fornecer-lhe informações atualizadas sobre o estado do pedido que efetuou.
    </p>

    <div class="InputWrapper">
        <input @bind="codigo" type="text" class="caixaDETexto" placeholder="Introduza o ID do ticket aqui" />
        <button class="BotaoSubscrever" @onclick="ProcurarTicket">Procurar</button>
    </div>

    @if (ticketEncontrado != null)
    {
        <div class="cards-container">
            <div class="VerEstado">
                @ticketEncontrado.EstadoTarefa
            </div>
            <div class="VerDepartamento1">
                @ticketEncontrado.EscolhaInicial
            </div>
            <div class="VerDepartamento2">
                @ticketEncontrado.Departamento
            </div>
            <div class="VerHorasss">
                @ticketEncontrado.Data.ToString("HH:mm")
            </div>

            <MudTooltip Class="custom-tooltip" Text="Sujeito a alterações até que o ticket esteja fechado" Placement="Placement.Bottom" Arrow="true" Style="background: #0E384E">
                <span class="material-symbols-outlined">
                    info
                </span>
            </MudTooltip>
        </div>

        <div class="ticket-info">
            <div class="ticketcode">#@ticketEncontrado.Id</div>
            <div class="ticketassunto">@ticketEncontrado.Assunto</div>
        </div>

        <div class="ticketMensagem">@ticketEncontrado.Mensagem</div>
        <div class="ticketMensagem">@ticketEncontrado.Data.ToString("dd/MM/yyyy")</div>

        <hr style="width: 720px; margin-left: 330px; color: #758A8A; margin-top: 8px;" />

        <div class="ticket-detalhes">
            <span class="ticket-info-item"><strong>Nome <br /></strong> @ticketEncontrado.Nome</span>
            <span class="ticket-info-item"><strong>Email<br /></strong> @ticketEncontrado.Email</span>
            <span class="ticket-info-item"><strong>Empresa<br /></strong> @ticketEncontrado.Empresa</span>
            <span class="ticket-info-item"><strong>Telefone<br /></strong> @ticketEncontrado.Telefone</span>
        </div>

        <div class="caixaComentarios">
            <div class="criouticket">
                <div class="point"> • </div>
                <div class="username">@FormatarNome(ticketEncontrado.Nome)</div>
                <div class="textocriouticket">criou o ticket</div>
                <div class="horariocriacaoticket">@ticketEncontrado.Data.ToString("HH:mm")</div>
            </div>
            <div class="semmaisdados">Não existem mais dados</div>

            <!-- Formulário para adicionar um comentário -->
            <div class="comentario-form">
                <h4>Adicionar Comentário</h4>
                <EditForm Model="novoComentario" OnValidSubmit="AdicionarComentario">
                    <textarea @bind="novoComentario.Conteudo" placeholder="Digite seu comentário..."></textarea>
                    <div class="switch-container">
                        <MudSwitch @bind-Checked="novoComentario.publico" Color="@(novoComentario.publico ? MudBlazor.Color.Success : MudBlazor.Color.Error)" />
                        <span>@(novoComentario.publico ? "Público" : "Privado")</span>
                    </div>
                    <button type="submit">Enviar comentário</button>
                </EditForm>
            </div>
        </div>
    }
    @if (!string.IsNullOrEmpty(erro))
    {
        <div class="alert alert-danger" style="margin-left: 324px; margin-top: 20px;">@erro</div>
    }
</header>

@code {
    private string codigo;
    private Ticket ticketEncontrado;
    private string erro;
    private Comentario novoComentario = new Comentario();

    private async Task ProcurarTicket()
    {
        erro = null;
        ticketEncontrado = null;

        try
        {
            ticketEncontrado = await TicketService.GetTicketByIdAsync(codigo);
            if (ticketEncontrado == null)
            {
                erro = "Ticket não encontrado.";
            }
        }
        catch (Exception ex)
        {
            erro = $"Erro ao procurar ticket: {ex.Message}";
        }
    }

    private async Task AdicionarComentario()
    {
        if (ticketEncontrado != null)
        {
            // Vincula o comentário ao ticket encontrado
            novoComentario.TicketId = ticketEncontrado.Id;
            try
            {
                await ComentarioService.CreateComentarioAsync(novoComentario);
                // Após o envio, limpa o formulário
                novoComentario = new Comentario();
            }
            catch (Exception ex)
            {
                erro = $"Erro ao adicionar comentário: {ex.Message}";
            }
        }
    }

    private string FormatarNome(string nome)
    {
        var palavrasRemover = new[] { "de", "da", "do", "dos", "das" };
        var normalizedString = nome.Normalize(NormalizationForm.FormD);
        var stringBuilder = new StringBuilder();

        foreach (var c in normalizedString)
        {
            if (CharUnicodeInfo.GetUnicodeCategory(c) != UnicodeCategory.NonSpacingMark)
            {
                stringBuilder.Append(c);
            }
        }

        var nomeArray = stringBuilder.ToString().Split(new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);
        var nomeFinalArray = nomeArray.Where(word => !palavrasRemover.Contains(word.ToLower())).ToArray();
        var nomeFinal = string.Join(" ", nomeFinalArray);
        return "@" + nomeFinal.Replace(" ", "").ToLower();
    }
}
