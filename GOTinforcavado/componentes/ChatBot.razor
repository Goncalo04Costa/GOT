@page "/chatbot"
@using GOTinforcavado.Services
@inject ChatBotService ChatBotService


<button id="widgetIcon" @onclick="TogglePopup">
    <img class="logo-sticky" alt="Inforcávado, Informática, Lda" src="/imagens/inforbot.png" />
</button>

@if (showPopup)
{
    <div class="popup-container" @onclick="TogglePopup">
        <div class="popup-content chat-wrapper chat-open" @onclick:stopPropagation>
            <div class="title-wrapper">
                <span>InforBot</span>
            </div>

            <div id="messageList">
                @foreach (var msg in messages)
                {
                    <div class="message @(msg.IsUser ? "user-message" : "bot-message")">@msg.Text</div>
                }
            </div>

            <div style="display: flex; padding: 10px; gap: 8px;">
                <input @bind="currentMessage"
                       @bind:event="oninput"
                       placeholder="Escreva a sua mensagem..."
                       style="flex:1; padding: 8px; border-radius: 8px; border: 1px solid #ccc;" />
                <button @onclick="SendMessage"
                        style="padding: 8px 12px; background: #17585F; color: white; border: none; border-radius: 8px;">
                    Enviar
                </button>
            </div>
        </div>
    </div>
}

@code {
    private bool showPopup = false;
    private string currentMessage = string.Empty;
    private string respostaBot = string.Empty;

    private List<(string Text, bool IsUser)> messages = new()
    {
        ("Olá! Sou o InforBot, o novo assistente virtual da Inforcavado.", false),
        ("Em que posso ajudar?", false)
    };

    private void TogglePopup()
    {
        showPopup = !showPopup;
    }

    private async Task SendMessage()
    {
        if (!string.IsNullOrWhiteSpace(currentMessage))
        {
       
            messages.Add((currentMessage, true));

           
            respostaBot = await ChatBotService.ObterRespostaAsync(currentMessage);

           
            messages.Add((respostaBot, false));

       
            currentMessage = string.Empty;
        }
    }
}


<style>
    button#widgetIcon {
        background: var(--df-messenger-button-titlebar-color, #17585F);
        border: none;
        border-radius: 50%;
        bottom: 20px;
        box-shadow: rgba(0, 0, 0, 0.24) 1px 4px 15px 0px;
        cursor: pointer;
        height: 56px;
        width: 56px;
        padding: 0;
        position: fixed;
        right: 20px;
        z-index: 1000;
    }

        button#widgetIcon img.logo-sticky {
            height: 100%;
            width: 100%;
            object-fit: cover;
            border-radius: 50%;
        }

    .popup-container {
        position: fixed;
        bottom: 90px;
        right: 20px;
        z-index: 1001;
    }

    .popup-content {
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.25);
        width: 360px;
        height: 560px;
        display: flex;
        flex-direction: column;
    }

    .chat-wrapper.chat-open {
        opacity: 1;
        transform: translateZ(0px) scale(1);
        transition: transform 0.2s, opacity 0.2s ease-in;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .title-wrapper {
        align-items: center;
        background-color: var(--df-messenger-button-titlebar-color, #17585F);
        border-radius: 12px 12px 0 0;
        box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px 0px;
        color: var(--df-messenger-button-titlebar-font-color, white);
        display: flex;
        font-family: Roboto, sans-serif;
        font-size: 18px;
        height: 50px;
        justify-content: space-between;
        padding: 0 15px;
    }

    #messageList {
        display: flex;
        flex: 1 1 0%;
        flex-direction: column;
        overflow-y: auto;
        padding: 10px;
        background: #f7f7f7;
    }

    .message {
        max-width: 70%;
        padding: 10px 14px;
        border-radius: 16px;
        margin: 4px 0;
        font-family: Roboto, sans-serif;
        font-size: 14px;
        line-height: 1.4;
        word-break: break-word;
    }

    .bot-message {
        align-self: flex-start;
        background-color: #17585F;
        color: white;
        border-bottom-left-radius: 4px;
    }

    .user-message {
        align-self: flex-end;
        background-color: #ffffff;
        color: black;
        border-bottom-right-radius: 4px;
        border: 1px solid #ccc;
    }
</style>
