@page "/Login"

@using Blazored.LocalStorage
@using GOTinforcavado.Services
@using Shared.models
@inject NavigationManager NavigationManager
@inject UtilizadorService UtilizadorService
@inject ILocalStorageService LocalStorage

<header class="fundo">
    <div class="card">
        <div class="card-left">
            <img src="/imagens/Login GOT image (896x1017).png" />
        </div>
        <div class="card-right">
            <h2>Login</h2>
            <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="input-group">
                    <label for="email">Email</label>
                    <InputText id="email" class="form-control" @bind-Value="loginModel.Email" placeholder="Introduza o seu email" />
                </div>
                <div class="input-group">
                    <label for="password">Senha</label>
                    <InputText id="password" class="form-control" @bind-Value="loginModel.Password" type="password" placeholder="Introduza a sua palavra passe" />
                </div>
                <button type="submit">Entrar</button>

                @if (!string.IsNullOrEmpty(loginError))
                {
                    <p class="error-message">@loginError</p>
                }
            </EditForm>
        </div>
    </div>
</header>

@code {
    private LoginModel loginModel = new LoginModel();
    private string loginError;

    private async Task HandleLogin()
    {
        loginError = null;

        try
        {

            var token = await UtilizadorService.AutenticarAsync(loginModel.Email, loginModel.Password);


            if (string.IsNullOrEmpty(token))
            {
                loginError = "Email ou palavra-passe incorretos.";
                return;
            }

            await LocalStorage.SetItemAsync("authToken", token);
            await LocalStorage.SetItemAsync("userEmail", loginModel.Email);

            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            loginError = "Erro ao autenticar: " + ex.Message;
        }
    }

    public class LoginModel
    {
        public string Email { get; set; }
        public string Password { get; set; }
    }
}


<style>
    .fundo {
        width: 100vw;
        height: 100vh;
        background-color: #E8F2F3;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .card {
        height: 620px;
        width: 1300px;
        background-color: #0D3439;
        border-radius: 10px;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
        display: flex;
        overflow: hidden;
    }

    .card-left {
        width: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #1B4D54;
    }

        .card-left img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    .card-right {
        width: 50%;
        padding: 40px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        color: white;
    }

        .card-right h2 {
            margin-bottom: 20px;
        }

    .input-group {
        display: flex;
        flex-direction: column;
        margin-bottom: 15px;
        width: 100%;
    }

        .input-group label {
            margin-bottom: 5px;
            font-size: 14px;
        }

        .input-group input {
            padding: 10px;
            border: none;
            border-radius: 5px;
            width: 100%;
        }

    button {
        margin-top: 10px;
        margin-left: 50px;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        background-color: #2D6A6A;
        color: white;
        font-size: 16px;
        cursor: pointer;
    }

        button:hover {
            background-color: #245757;
        }
</style>        